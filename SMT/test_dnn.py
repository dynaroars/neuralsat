from dnn_solver.utils import InputParser, model_random
from dnn_solver.dnn_solver import DNNSolver
from pprint import pprint

conditions = {
    'in': '(and (x0 < 0) (x1 > 1))',
    'out': '(y0 > y1)'
}

# dnn = {
#     'a0_0': [(1.0, 'x0'), (-1.0, 'x1')],
#     'a0_1': [(1.0, 'x0'), (1.0, 'x1')],
#     'a1_0': [(0.5, 'n0_0'), (-0.2, 'n0_1')],
#     'a1_1': [(-0.5, 'n0_0'), (0.1, 'n0_1')],
#     'y0' : [(1.0, 'n1_0'), (-1.0, 'n1_1')],
#     'y1' : [(-1.0, 'n1_0'), (1.0, 'n1_1')],
# }

# vars_mapping = {
#     'a0_0': 1,
#     'a0_1': 2,
#     'a1_0': 3,
#     'a1_1': 4,
# }

model = model_random(3, [10]*2, 4)
dnn, vars_mapping = InputParser.parse(model)

pprint(dnn)

pprint(vars_mapping)

# dnn = {'a0_0': [(0.824032, 'x0'), (0.7587747, 'x1'), (-0.09482145, 'x2')],
#  'a0_1': [(0.66168076, 'x0'), (-0.5171814, 'x1'), (0.5448113, 'x2')],
#  'a0_2': [(0.0439595, 'x0'), (0.15560275, 'x1'), (0.67764634, 'x2')],
#  'a0_3': [(0.12155646, 'x0'), (0.55247384, 'x1'), (0.05162698, 'x2')],
#  'a0_4': [(0.13315153, 'x0'), (0.5299539, 'x1'), (0.78388697, 'x2')],
#  'a1_0': [(-0.010219932, 'n0_0'),
#           (-0.07380724, 'n0_1'),
#           (-0.23386562, 'n0_2'),
#           (-0.35420215, 'n0_3'),
#           (-0.41569835, 'n0_4')],
#  'a1_1': [(-0.40711063, 'n0_0'),
#           (0.760288, 'n0_1'),
#           (0.18576008, 'n0_2'),
#           (0.08155817, 'n0_3'),
#           (0.4141059, 'n0_4')],
#  'a1_2': [(0.33693063, 'n0_0'),
#           (-0.4332356, 'n0_1'),
#           (0.23773718, 'n0_2'),
#           (-0.09502065, 'n0_3'),
#           (0.6641021, 'n0_4')],
#  'a1_3': [(0.61986554, 'n0_0'),
#           (0.011144578, 'n0_1'),
#           (0.5908867, 'n0_2'),
#           (0.093096316, 'n0_3'),
#           (-0.043918908, 'n0_4')],
#  'a1_4': [(0.078207195, 'n0_0'),
#           (0.21723515, 'n0_1'),
#           (0.45572424, 'n0_2'),
#           (-0.13864958, 'n0_3'),
#           (-0.13140595, 'n0_4')],
#  'a2_0': [(0.57045174, 'n1_0'),
#           (0.5545361, 'n1_1'),
#           (0.49626863, 'n1_2'),
#           (-0.116531074, 'n1_3'),
#           (-0.062326133, 'n1_4')],
#  'a2_1': [(-0.25750148, 'n1_0'),
#           (0.46414578, 'n1_1'),
#           (0.24995553, 'n1_2'),
#           (0.012000561, 'n1_3'),
#           (0.043592572, 'n1_4')],
#  'a2_2': [(-0.28187865, 'n1_0'),
#           (-0.08351225, 'n1_1'),
#           (-0.52372164, 'n1_2'),
#           (0.45172703, 'n1_3'),
#           (-0.4633974, 'n1_4')],
#  'a2_3': [(-0.16466153, 'n1_0'),
#           (0.48458385, 'n1_1'),
#           (0.6274358, 'n1_2'),
#           (-0.103746355, 'n1_3'),
#           (0.06226039, 'n1_4')],
#  'a2_4': [(-0.31617618, 'n1_0'),
#           (0.13489693, 'n1_1'),
#           (-0.09261519, 'n1_2'),
#           (0.19070709, 'n1_3'),
#           (-0.72050166, 'n1_4')],
#  'y0': [(-0.59109235, 'n2_0'),
#         (-0.08019501, 'n2_1'),
#         (-0.37322053, 'n2_2'),
#         (-0.68330693, 'n2_3'),
#         (-0.7345889, 'n2_4')],
#  'y1': [(-0.19424087, 'n2_0'),
#         (-0.3516597, 'n2_1'),
#         (0.071299076, 'n2_2'),
#         (-0.38108298, 'n2_3'),
#         (-0.29300916, 'n2_4')],
#  'y2': [(-0.6323049, 'n2_0'),
#         (0.31406558, 'n2_1'),
#         (0.41757607, 'n2_2'),
#         (-0.13965827, 'n2_3'),
#         (0.007650256, 'n2_4')],
#  'y3': [(0.1028927, 'n2_0'),
#         (0.084257364, 'n2_1'),
#         (0.021190166, 'n2_2'),
#         (-0.22050565, 'n2_3'),
#         (-0.59352374, 'n2_4')]}
# vars_mapping = {'a0_0': 1,
#  'a0_1': 2,
#  'a0_2': 3,
#  'a0_3': 4,
#  'a0_4': 5,
#  'a1_0': 6,
#  'a1_1': 7,
#  'a1_2': 8,
#  'a1_3': 9,
#  'a1_4': 10,
#  'a2_0': 11,
#  'a2_1': 12,
#  'a2_2': 13,
#  'a2_3': 14,
#  'a2_4': 15}



solver = DNNSolver(dnn, vars_mapping, conditions)
print(solver.solve())